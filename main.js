(()=>{"use strict";var __webpack_modules__={285:()=>{eval('\n;// CONCATENATED MODULE: ./src/utils/constants.js\nvar popupEditProfile = document.querySelector(\'.popup__profile-edit\'); // попап редактирования профиля\n\nvar openEditProfilePopupButton = document.querySelector(\'.profile__edit-btn\'); //кнопка открывающая попап редактирования профиля \n\nvar formEditProfile = popupEditProfile.querySelector(\'.popup__form\');\nvar curentAvatarSelector = document.querySelector(\'.profile__avatar\');\nvar currentProfileName = document.querySelector(\'.profile__name\'); //текущее значение имени профиля \n\nvar currentAboutMe = document.querySelector(\'.profile__about-me\'); //текущее значение данный "о себе"\n\nvar inputProfileName = popupEditProfile.querySelector(\'.popup__input-name\'); //поле ввода имени формы\n\nvar inputAboutMe = popupEditProfile.querySelector(\'.popup__input-about-me\'); // поле ввода "о себе" формы\n\nvar popupAddCard = document.querySelector(\'.popup__add-card\'); //попап добавления карточки \n\nvar formAddCard = popupAddCard.querySelector(\'.popup__form\'); //\n\nvar openAddCardPopupButton = document.querySelector(\'.profile__add-btn\'); // кнопка открывающая попап добавления карточки\n\nvar popupUpdateAvatar = document.querySelector(\'.popup__avatar-update\');\nvar formUpdateAvatar = popupUpdateAvatar.querySelector(\'.popup__form\');\nvar changeAvatarButton = document.querySelector(\'.profile__change-avatar-btn\');\nvar popupRemoveCard = document.querySelector(\'.popup__remove-card\');\nvar template = \'.template\'; //template\n\nvar constants_elements = document.querySelector(\'.elements\'); //секция заполняемая карточками\n\nvar popupOpenImage = document.querySelector(\'.popup__image-preview\'); //попап превью картинки\n//Объект с селекторами отвечающими за валидацию форм\n\nvar validationElements = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__input-field\',\n  submitButtonSelector: \'.popup__save-btn\',\n  inactiveButtonClass: \'popup__save-btn_disable\',\n  inputErrorClass: \'popup__input-field_state_invalid\'\n};\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar Card = /*#__PURE__*/function () {\n  function Card(_ref) {\n    var _this = this;\n\n    var name = _ref.name,\n        link = _ref.link,\n        likes = _ref.likes,\n        _id = _ref._id,\n        owner = _ref.owner,\n        currentUserId = _ref.currentUserId,\n        template = _ref.template,\n        handleClickCard = _ref.handleClickCard,\n        handleRemoveCard = _ref.handleRemoveCard,\n        handleLike = _ref.handleLike;\n\n    _classCallCheck(this, Card);\n\n    this._name = name;\n    this._link = link;\n    this._likes = likes;\n    this._cardId = _id, this._ownerId = owner._id;\n    this._curentOwnerId = currentUserId;\n    this._template = document.querySelector(template).content.querySelector(\'.elements__figure\');\n    this._handleClickCard = handleClickCard;\n    this._handleRemoveCard = handleRemoveCard;\n    this._handleLike = handleLike, this._isLiked = this._likes.some(function (like) {\n      return like._id === _this._curentOwnerId;\n    });\n  }\n\n  _createClass(Card, [{\n    key: "_hideRemoveButton",\n    value: function _hideRemoveButton() {\n      if (this._curentOwnerId !== this._ownerId) {\n        this._cardDeleteButton.classList.add(\'remove-btn_visibility\');\n      }\n    }\n  }, {\n    key: "_showLikeButtonState",\n    value: function _showLikeButtonState() {\n      if (this._isLiked) {\n        this._cardLikeButton.classList.add(\'elements__like-btn_active\');\n      }\n    }\n  }, {\n    key: "_likeFunction",\n    value: function _likeFunction(res) {\n      if (this._isLiked) {\n        this._cardLikeButton.classList.remove(\'elements__like-btn_active\');\n\n        this._cardLikeCounter.textContent = res.likes.length;\n        this._isLiked = !this._isLiked;\n      } else {\n        this._cardLikeButton.classList.add(\'elements__like-btn_active\');\n\n        this._cardLikeCounter.textContent = res.likes.length;\n        this._isLiked = !this._isLiked;\n      }\n    }\n  }, {\n    key: "getIsLiked",\n    value: function getIsLiked() {\n      return this._isLiked;\n    }\n  }, {\n    key: "removeCard",\n    value: function removeCard() {\n      this._card.remove();\n\n      this._card = null;\n    }\n  }, {\n    key: "getCard",\n    value: function getCard() {\n      this._card = this._template.cloneNode(true);\n      this._cardImage = this._card.querySelector(\'.elements__image\');\n      this._cardImageCaption = this._card.querySelector(\'.elements__caption\');\n      this._cardLikeButton = this._card.querySelector(\'.elements__like-btn\');\n      this._cardLikeCounter = this._card.querySelector(\'.elements__like-counter\');\n      this._cardDeleteButton = this._card.querySelector(\'.elements__remove-btn\');\n      this._cardImage.src = this._link;\n      this._cardImage.alt = this._name;\n      this._cardImageCaption.textContent = this._name;\n      this._cardLikeCounter.textContent = this._likes.length;\n\n      this._showLikeButtonState();\n\n      this._hideRemoveButton();\n\n      this._setEventListeners();\n\n      return this._card;\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this2 = this;\n\n      this._cardDeleteButton.addEventListener(\'click\', function () {\n        return _this2._handleRemoveCard();\n      });\n\n      this._cardLikeButton.addEventListener(\'click\', function () {\n        return _this2._handleLike();\n      });\n\n      this._cardImage.addEventListener(\'click\', function () {\n        return _this2._handleClickCard();\n      });\n    }\n  }]);\n\n  return Card;\n}();\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(settings, form) {\n    FormValidator_classCallCheck(this, FormValidator);\n\n    this._form = form;\n    this._inputElements = Array.from(form.querySelectorAll(settings.inputSelector));\n    this._submitButton = form.querySelector(settings.submitButtonSelector);\n    this._inactiveButtonStatus = settings.inactiveButtonClass;\n    this._inputError = settings.inputErrorClass;\n  }\n\n  FormValidator_createClass(FormValidator, [{\n    key: "_showError",\n    value: function _showError(inputElement) {\n      var errorElement = this._form.querySelector("#".concat(inputElement.id, "-error"));\n\n      errorElement.textContent = inputElement.validationMessage;\n      inputElement.classList.add(this._inputError);\n    }\n  }, {\n    key: "_hideError",\n    value: function _hideError(inputElement) {\n      var errorElement = this._form.querySelector("#".concat(inputElement.id, "-error"));\n\n      errorElement.textContent = " ";\n      inputElement.classList.remove(this._inputError);\n    }\n  }, {\n    key: "_checkInputValidity",\n    value: function _checkInputValidity(inputElement) {\n      if (inputElement.checkValidity()) {\n        this._hideError(inputElement);\n      } else {\n        this._showError(inputElement);\n      }\n    }\n  }, {\n    key: "toggleButtonState",\n    value: function toggleButtonState() {\n      if (this._form.checkValidity()) {\n        this._submitButton.classList.remove(this._inactiveButtonStatus);\n\n        this._submitButton.disabled = false;\n      } else {\n        this._submitButton.classList.add(this._inactiveButtonStatus);\n\n        this._submitButton.disabled = true;\n      }\n    }\n  }, {\n    key: "resetErrorMessage",\n    value: function resetErrorMessage() {\n      var _this = this;\n\n      this._inputElements.forEach(function (inputElement) {\n        _this._hideError(inputElement);\n      });\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this2 = this;\n\n      this._form.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n      });\n\n      this._inputElements.forEach(function (inputElement) {\n        inputElement.addEventListener(\'input\', function () {\n          _this2._checkInputValidity(inputElement);\n\n          _this2.toggleButtonState();\n        });\n      });\n    }\n  }, {\n    key: "enableValidation",\n    value: function enableValidation() {\n      this._setEventListeners();\n    }\n  }]);\n\n  return FormValidator;\n}();\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar Section = /*#__PURE__*/function () {\n  function Section(container) {\n    Section_classCallCheck(this, Section);\n\n    this._container = container;\n  }\n\n  Section_createClass(Section, [{\n    key: "addItem",\n    value: function addItem(element) {\n      this._container.prepend(element);\n    }\n  }]);\n\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popup) {\n    Popup_classCallCheck(this, Popup);\n\n    this._popup = popup;\n    this._popupOpened = \'popup_opened\';\n    this._closeButton = popup.querySelector(\'.popup__close-btn\');\n  }\n\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popup.classList.add(this._popupOpened);\n\n      document.addEventListener(\'keydown\', this._handleEscClose.bind(this));\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove(this._popupOpened);\n\n      document.removeEventListener(\'keydown\', this._handleEscClose.bind(this));\n    }\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose() {\n      if (event.key === "Escape") {\n        this.close();\n      }\n    }\n  }, {\n    key: "_closeClickOverlay",\n    value: function _closeClickOverlay(event) {\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      this.close();\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      this._closeButton.addEventListener(\'click\', this.close.bind(this));\n\n      this._popup.addEventListener(\'click\', this._closeClickOverlay.bind(this));\n    }\n  }]);\n\n  return Popup;\n}();\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n\n  var _super = _createSuper(PopupWithImage);\n\n  function PopupWithImage(popup) {\n    var _this;\n\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n\n    _this = _super.call(this, popup);\n    _this._popupImage = _this._popup.querySelector(\'.popup__image\');\n    _this._popupCaption = _this._popup.querySelector(\'.popup__image-caption\');\n    return _this;\n  }\n\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(_ref) {\n      var name = _ref.name,\n          link = _ref.link;\n      this._popupImage.src = link;\n      this._popupImage.alt = name;\n      this._popupCaption.textContent = name;\n\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n    }\n  }]);\n\n  return PopupWithImage;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\n\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get; } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\n\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\n\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\n\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\n\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\n\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n\n  function PopupWithForm(popup, submitFormHandler) {\n    var _this;\n\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n\n    _this = _super.call(this, popup);\n    _this._popupForm = _this._popup.querySelector(\'.popup__form\');\n    _this._submitButton = _this._popupForm.querySelector(\'.popup__save-btn\');\n    _this._inputFields = Array.from(_this._popupForm.querySelectorAll(\'.popup__input-field\'));\n    _this.submitFormHandler = submitFormHandler;\n    return _this;\n  }\n\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_toggleButtonState",\n    value: function _toggleButtonState(state) {\n      if (state) {\n        this._submitButton.textContent = \'Сохранение...\';\n      } else {\n        this._submitButton.textContent = \'Сохранить\';\n      }\n    }\n  }, {\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n\n      this._inputValues = {};\n\n      this._inputFields.forEach(function (input) {\n        _this2._inputValues[input.name] = input.value;\n      });\n\n      return this._inputValues;\n    }\n  }, {\n    key: "_submitHandler",\n    value: function _submitHandler() {\n      event.preventDefault();\n\n      this._toggleButtonState(true);\n\n      this.submitFormHandler(this._getInputValues());\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n\n      this._popupForm.addEventListener(\'submit\', this._submitHandler.bind(this));\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n\n      this._toggleButtonState(false);\n\n      this._popupForm.reset();\n    }\n  }]);\n\n  return PopupWithForm;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/PopupWithSubmit.js\nfunction PopupWithSubmit_typeof(obj) { "@babel/helpers - typeof"; return PopupWithSubmit_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithSubmit_typeof(obj); }\n\nfunction PopupWithSubmit_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PopupWithSubmit_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PopupWithSubmit_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithSubmit_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithSubmit_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction PopupWithSubmit_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithSubmit_get = Reflect.get; } else { PopupWithSubmit_get = function _get(target, property, receiver) { var base = PopupWithSubmit_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithSubmit_get.apply(this, arguments); }\n\nfunction PopupWithSubmit_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithSubmit_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction PopupWithSubmit_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithSubmit_setPrototypeOf(subClass, superClass); }\n\nfunction PopupWithSubmit_setPrototypeOf(o, p) { PopupWithSubmit_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithSubmit_setPrototypeOf(o, p); }\n\nfunction PopupWithSubmit_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithSubmit_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithSubmit_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithSubmit_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithSubmit_possibleConstructorReturn(this, result); }; }\n\nfunction PopupWithSubmit_possibleConstructorReturn(self, call) { if (call && (PopupWithSubmit_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithSubmit_assertThisInitialized(self); }\n\nfunction PopupWithSubmit_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction PopupWithSubmit_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction PopupWithSubmit_getPrototypeOf(o) { PopupWithSubmit_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithSubmit_getPrototypeOf(o); }\n\n\nvar PopupWithSubmit = /*#__PURE__*/function (_Popup) {\n  PopupWithSubmit_inherits(PopupWithSubmit, _Popup);\n\n  var _super = PopupWithSubmit_createSuper(PopupWithSubmit);\n\n  function PopupWithSubmit(popup) {\n    PopupWithSubmit_classCallCheck(this, PopupWithSubmit);\n\n    return _super.call(this, popup);\n  }\n\n  PopupWithSubmit_createClass(PopupWithSubmit, [{\n    key: "setRemove",\n    value: function setRemove(submitAction) {\n      this._handleSubmitCallback = submitAction;\n    }\n  }, {\n    key: "_submitHandler",\n    value: function _submitHandler() {\n      event.preventDefault();\n\n      this._handleSubmitCallback();\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      PopupWithSubmit_get(PopupWithSubmit_getPrototypeOf(PopupWithSubmit.prototype), "setEventListeners", this).call(this);\n\n      this._popup.addEventListener(\'submit\', this._submitHandler.bind(this));\n    }\n  }]);\n\n  return PopupWithSubmit;\n}(Popup);\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(avatarSelector, profileNameSelector, aboutMeSelector) {\n    UserInfo_classCallCheck(this, UserInfo);\n\n    this._avatarProfile = avatarSelector;\n    this._profileName = profileNameSelector;\n    this._profileAboutMe = aboutMeSelector;\n  }\n\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      this._profileInfo = {};\n      this._profileInfo.name = this._profileName.textContent;\n      this._profileInfo.job = this._profileAboutMe.textContent;\n      return this._profileInfo;\n    }\n  }, {\n    key: "getUserId",\n    value: function getUserId() {\n      return this._currentUserId;\n    }\n  }, {\n    key: "setUserAvatar",\n    value: function setUserAvatar(link) {\n      this._avatarProfile.src = link;\n    }\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(profilename, job, id) {\n      this._profileName.textContent = profilename;\n      this._profileAboutMe.textContent = job;\n      this._currentUserId = id;\n    }\n  }]);\n\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/api/Api.js\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar Api = /*#__PURE__*/function () {\n  function Api(_ref) {\n    var token = _ref.token,\n        url = _ref.url;\n\n    Api_classCallCheck(this, Api);\n\n    this._token = token;\n    this._url = url;\n  }\n\n  Api_createClass(Api, [{\n    key: "_response",\n    value: function _response(res) {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject("Произошла ошибка");\n    }\n  }, {\n    key: "getUserInformation",\n    value: function getUserInformation() {\n      return fetch("".concat(this._url, "/users/me"), {\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._response);\n    }\n  }, {\n    key: "getCards",\n    value: function getCards() {\n      return fetch("".concat(this._url, "/cards"), {\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._response);\n    }\n  }, {\n    key: "editUserInfo",\n    value: function editUserInfo(name, about) {\n      return fetch("".concat(this._url, "/users/me"), {\n        method: "PATCH",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(this._response);\n    }\n  }, {\n    key: "addNewCard",\n    value: function addNewCard(_ref2) {\n      var name = _ref2.name,\n          link = _ref2.link;\n      return fetch("".concat(this._url, "/cards"), {\n        method: "POST",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(this._response);\n    }\n  }, {\n    key: "removeCard",\n    value: function removeCard(cardId) {\n      return fetch("".concat(this._url, "/cards/").concat(cardId), {\n        method: "DELETE",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._response);\n    }\n  }, {\n    key: "likeCard",\n    value: function likeCard(cardId) {\n      return fetch("".concat(this._url, "/cards/likes/").concat(cardId), {\n        method: "PUT",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._response);\n    }\n  }, {\n    key: "dislikeCard",\n    value: function dislikeCard(cardId) {\n      return fetch("".concat(this._url, "/cards/likes/").concat(cardId), {\n        method: "DELETE",\n        headers: {\n          authorization: this._token\n        }\n      }).then(this._response);\n    }\n  }, {\n    key: "editUserAvatar",\n    value: function editUserAvatar(avatar) {\n      return fetch("".concat(this._url, "/users/me/avatar "), {\n        method: "PATCH",\n        headers: {\n          authorization: this._token,\n          "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n          avatar: avatar\n        })\n      }).then(this._response);\n    }\n  }]);\n\n  return Api;\n}();\nvar api = new Api({\n  token: "f15df90b-c5d7-4a51-ba9b-c09d4fecf6eb",\n  url: "https://mesto.nomoreparties.co/v1/cohort-18"\n});\n/* harmony default export */ const api_Api = (api);\n;// CONCATENATED MODULE: ./src/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nvar cardList = new Section(constants_elements);\nvar popupEditProfileValidator = new FormValidator(validationElements, formEditProfile); //валидация формы редактирования профиля\n\npopupEditProfileValidator.enableValidation();\nvar popupAddCardValidator = new FormValidator(validationElements, formAddCard); // валидация формы добавления карточки\n\npopupAddCardValidator.enableValidation();\nvar popupUpdateAvatarValidator = new FormValidator(validationElements, formUpdateAvatar); //валидация формы  изменения аватара\n\npopupUpdateAvatarValidator.enableValidation();\nvar imagePopup = new PopupWithImage(popupOpenImage); //попап картинки\n\nvar removeCardPopup = new PopupWithSubmit(popupRemoveCard); //попап подтверждения и удаления карточки\n\nvar confirmAndDeleteCard = function confirmAndDeleteCard(id, card) {\n  //подтверждение и удаление карточки\n  removeCardPopup.setRemove(function () {\n    api_Api.removeCard(id).then(function () {\n      return card.removeCard();\n    }).then(function () {\n      return removeCardPopup.close();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  });\n  removeCardPopup.open();\n};\n\nvar likeCard = function likeCard(id, card) {\n  //запрос на лайк/дизлайк карточки\n  var likeRequest = card.getIsLiked() ? api_Api.dislikeCard(id) : api_Api.likeCard(id);\n  likeRequest.then(function (res) {\n    return card._likeFunction(res);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar addCard = function addCard(data) {\n  //создание карточки\n  var card = new Card(_objectSpread(_objectSpread({}, data), {}, {\n    currentUserId: userInfo.getUserId(),\n    template: template,\n    handleClickCard: function handleClickCard() {\n      imagePopup.open(data);\n    },\n    handleRemoveCard: function handleRemoveCard() {\n      confirmAndDeleteCard(data._id, card);\n    },\n    handleLike: function handleLike() {\n      likeCard(data._id, card);\n    }\n  }));\n  cardList.addItem(card.getCard());\n};\n\nvar addCardPopupForm = new PopupWithForm(popupAddCard, function (cardData) {\n  //попап добавления карточки\n  api_Api.addNewCard(cardData).then(function (cardData) {\n    addCard(cardData);\n  }).then(function () {\n    addCardPopupForm.close();\n  }).catch(function (err) {\n    console.log(err);\n  });\n});\nvar editProfilePopupForm = new PopupWithForm(popupEditProfile, function (_ref) {\n  var name = _ref.name,\n      about = _ref.about;\n  //попап редактирования профиля\n  api_Api.editUserInfo(name, about).then(function (res) {\n    userInfo.setUserInfo(res.name, res.about);\n  }).then(function () {\n    editProfilePopupForm.close();\n  }).catch(function (err) {\n    console.log(err);\n  });\n});\nvar updateAvatarPopup = new PopupWithForm(popupUpdateAvatar, function (_ref2) {\n  var avatarlink = _ref2.avatarlink;\n  // попап обновления аватара\n  api_Api.editUserAvatar(avatarlink).then(function (res) {\n    userInfo.setUserAvatar(res.avatar);\n  }).then(function () {\n    updateAvatarPopup.close();\n  }).catch(function (err) {\n    console.log(err);\n  });\n});\nvar userInfo = new UserInfo(curentAvatarSelector, currentProfileName, currentAboutMe); // объект с информацией пользователя\n\nPromise.all([//получение первичных данных с сервера\napi_Api.getUserInformation(), api_Api.getCards()]).then(function (values) {\n  var _values = _slicedToArray(values, 2),\n      userData = _values[0],\n      initialCards = _values[1];\n\n  userInfo.setUserInfo(userData.name, userData.about, userData._id);\n  userInfo.setUserAvatar(userData.avatar);\n  var initialCardsReverse = initialCards.reverse();\n  initialCardsReverse.forEach(function (element) {\n    addCard(element);\n  });\n}).catch(function (err) {\n  console.log(err);\n}); //функция открывающая попап редактирофания профиля, заполняющая форму текущими значениями профиля, проверяющая валидацию\n\nvar addProfileInfo = function addProfileInfo() {\n  var currentInfo = userInfo.getUserInfo();\n  inputProfileName.value = currentInfo.name;\n  inputAboutMe.value = currentInfo.job;\n  popupAddCardValidator.toggleButtonState();\n  popupEditProfileValidator.resetErrorMessage();\n  editProfilePopupForm.open();\n}; //функция открывающая попап добавления карточки, проверяющая валидацию\n\n\nvar openAddCardPopup = function openAddCardPopup() {\n  popupAddCardValidator.toggleButtonState();\n  popupAddCardValidator.resetErrorMessage();\n  addCardPopupForm.open();\n}; // функция открывающая попап обновления аватара, проверяющая ошибки валидации\n\n\nvar openUpdateAvatarPopup = function openUpdateAvatarPopup() {\n  popupUpdateAvatarValidator.toggleButtonState();\n  popupUpdateAvatarValidator.resetErrorMessage();\n  updateAvatarPopup.open();\n};\n\nopenAddCardPopupButton.addEventListener("click", openAddCardPopup); //обработчик кнопки добавления карточки\n\nopenEditProfilePopupButton.addEventListener("click", addProfileInfo); //обработчик кнопки редактирования профиля\n\nchangeAvatarButton.addEventListener("click", openUpdateAvatarPopup); //обработчик кнопки обновления аватара\n\nimagePopup.setEventListeners(); //слушатели попапа картинки\n\nupdateAvatarPopup.setEventListeners(); //слушатели попапа обновления аватара\n\naddCardPopupForm.setEventListeners(); //слушатели попапа добавления карточки\n\neditProfilePopupForm.setEventListeners(); // слушайтели попапа редактирования профиля\n\nremoveCardPopup.setEventListeners(); // слушайтели попапа удаления карточки\n\n//# sourceURL=webpack://project_mesto/./src/index.js_+_10_modules?')}},__webpack_exports__={};__webpack_modules__[285]()})();